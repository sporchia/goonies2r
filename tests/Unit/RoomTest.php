<?php

namespace Tests\Unit;

use App\Room;
use Fhaculty\Graph\Graph;
use Tests\TestCase;

class RoomTest extends TestCase
{
    /**
     * A basic test example.
     *
     * @return void
     */
    public function testRoomId()
    {
        $graph = new Graph;
        $room = new Room($graph, 'Room Test', 0x04, 0x00, 0x00, 0x0c);

        $this->assertEquals(0x04, $room->getRoomId());
    }

    /**
     * Tests all room layouts.
     *
     * @dataProvider dataProviderLayouts
     *
     * @return void
     */
    public function testLayouts($room, $layout) : void
    {
        $this->assertEquals($layout, $room->getLayout());
    }

    /**
     * return all possible layouts.
     *
     * @return array
     */
    public function dataProviderLayouts() : array
    {
        $tests = [
            [new Room(new Graph, '0c empty', 0x00, 0x00, 0x00, 0x0c),    [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0x14, 0x15, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c left', 0x00, 0x00, 0x02, 0x0c),     [0x0a, 0x0c, 0x0c, 0x0b, 0x12, 0x10, 0x11, 0x0c, 0x16, 0x14, 0x15, 0x0c, 0x1a, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c right', 0x00, 0x00, 0x01, 0x0c),    [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x13, 0x0c, 0x14, 0x15, 0x17, 0x0e, 0x0d, 0x0d, 0x1b]],
            [new Room(new Graph, '0c up', 0x00, 0x00, 0x08, 0x0c),       [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0x00, 0x01, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c h up', 0x00, 0x02, 0x08, 0x0c),     [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0xd7, 0xd8, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c g up', 0x00, 0x06, 0x08, 0x0c),     [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0xbb, 0xbc, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c l up', 0x00, 0x00, 0x80, 0x0c),     [0x0a, 0x04, 0x05, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0x14, 0x15, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c h l up', 0x00, 0x01, 0x80, 0x0c),   [0x0a, 0xbd, 0xbe, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0x14, 0x15, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c l down', 0x00, 0x00, 0x40, 0x0c),   [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0x14, 0x15, 0x0c, 0x0e, 0x08, 0x09, 0x0f]],
            [new Room(new Graph, '0c h l down', 0x00, 0x03, 0x40, 0x0c), [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0x14, 0x15, 0x0c, 0x0e, 0xb9, 0xba, 0x0f]],
            [new Room(new Graph, '0d empty', 0x00, 0x00, 0x00, 0x0d),    [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x38, 0x39, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d left', 0x00, 0x00, 0x02, 0x0d),     [0x2e, 0x31, 0x31, 0x2f, 0x36, 0x34, 0x35, 0x31, 0x3a, 0x38, 0x39, 0x31, 0x3e, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d right', 0x00, 0x00, 0x01, 0x0d),    [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x37, 0x31, 0x38, 0x39, 0x3b, 0x32, 0x30, 0x30, 0x3f]],
            [new Room(new Graph, '0d up', 0x00, 0x00, 0x08, 0x0d),       [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x24, 0x25, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d h up', 0x00, 0x02, 0x08, 0x0d),     [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0xd9, 0xda, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d g up', 0x00, 0x06, 0x08, 0x0d),     [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0xc3, 0xc4, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d l up', 0x00, 0x00, 0x80, 0x0d),     [0x2e, 0x28, 0x29, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x38, 0x39, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d h l up', 0x00, 0x01, 0x80, 0x0d),   [0x2e, 0xc5, 0xc6, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x38, 0x39, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d l down', 0x00, 0x00, 0x40, 0x0d),   [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x38, 0x39, 0x31, 0x32, 0x2c, 0x2d, 0x33]],
            [new Room(new Graph, '0d h l down', 0x00, 0x03, 0x40, 0x0d), [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x38, 0x39, 0x31, 0x32, 0xc1, 0xc2, 0x33]],
            [new Room(new Graph, '0e empty', 0x00, 0x00, 0x00, 0x0e),    [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e left', 0x00, 0x00, 0x02, 0x0e),     [0x56, 0x57, 0x58, 0x59, 0x4c, 0x5b, 0x5c, 0x5d, 0x50, 0x5f, 0x60, 0x61, 0x54, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e right', 0x00, 0x00, 0x01, 0x0e),    [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x4d, 0x5e, 0x5f, 0x60, 0x51, 0x62, 0x63, 0x64, 0x55]],
            [new Room(new Graph, '0e up', 0x00, 0x00, 0x08, 0x0e),       [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x46, 0x47, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e h up', 0x00, 0x02, 0x08, 0x0e),     [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0xdb, 0xdc, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e g up', 0x00, 0x06, 0x08, 0x0e),     [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0xcb, 0xcc, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e l up', 0x00, 0x00, 0x80, 0x0e),     [0x56, 0x4a, 0x4b, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e h l up', 0x00, 0x01, 0x80, 0x0e),   [0x56, 0xcd, 0xce, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e l down', 0x00, 0x00, 0x40, 0x0e),   [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x4e, 0x4f, 0x65]],
            [new Room(new Graph, '0e h l down', 0x00, 0x03, 0x40, 0x0e), [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0xc9, 0xca, 0x65]],
            [new Room(new Graph, '0f empty', 0x00, 0x00, 0x00, 0x0f),    [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f left', 0x00, 0x00, 0x02, 0x0f),     [0x6a, 0x6b, 0x6c, 0x6d, 0x80, 0x6f, 0x70, 0x71, 0x84, 0x73, 0x74, 0x75, 0x88, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f right', 0x00, 0x00, 0x01, 0x0f),    [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x81, 0x72, 0x73, 0x74, 0x85, 0x76, 0x77, 0x78, 0x89]],
            [new Room(new Graph, '0f up', 0x00, 0x00, 0x08, 0x0f),       [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x8c, 0x8d, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f h up', 0x00, 0x02, 0x08, 0x0f),     [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0xdd, 0xde, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f g up', 0x00, 0x06, 0x08, 0x0f),     [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0xd3, 0xd4, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f l up', 0x00, 0x00, 0x80, 0x0f),     [0x6a, 0x7e, 0x7f, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f h l up', 0x00, 0x01, 0x80, 0x0f),   [0x6a, 0xd5, 0xd6, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f l down', 0x00, 0x00, 0x40, 0x0f),   [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x82, 0x83, 0x79]],
            [new Room(new Graph, '0f h l down', 0x00, 0x03, 0x40, 0x0f), [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0xd1, 0xd2, 0x79]],
            [new Room(new Graph, '10 empty', 0x00, 0x00, 0x00, 0x10),    [0x9a, 0x9b, 0xa6, 0xa5, 0x9e, 0x90, 0x91, 0xa4, 0x9f, 0x94, 0x95, 0xa3, 0xa0, 0xa1, 0xa6, 0xa2]],
        ];

        $safes = [
            [new Room(new Graph, '0c safe', 0x00, 0x00, 0x00, 0x0c),   [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0x02, 0x03, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c h safe', 0x00, 0x68, 0x00, 0x0c), [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0xd7, 0xd8, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0c g safe', 0x00, 0x04, 0x00, 0x0c), [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x10, 0x11, 0x0c, 0x0c, 0xb7, 0xb8, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0d safe', 0x00, 0x00, 0x00, 0x0d),   [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x26, 0x27, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d h safe', 0x00, 0x68, 0x00, 0x0d), [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0xd9, 0xda, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0d g safe', 0x00, 0x04, 0x00, 0x0d), [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0xbf, 0xc0, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0e safe', 0x00, 0x00, 0x00, 0x0e),   [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x48, 0x49, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e h safe', 0x00, 0x68, 0x00, 0x0e), [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0xdb, 0xdc, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0e g safe', 0x00, 0x04, 0x00, 0x0e), [0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0xc7, 0xc8, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0f safe', 0x00, 0x00, 0x00, 0x0f),   [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x7a, 0x7b, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f h safe', 0x00, 0x68, 0x00, 0x0f), [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0xdd, 0xde, 0x75, 0x76, 0x77, 0x78, 0x79]],
            [new Room(new Graph, '0f g safe', 0x00, 0x04, 0x00, 0x0f), [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0xcf, 0xd0, 0x75, 0x76, 0x77, 0x78, 0x79]],

        ];
        foreach ($safes as $safe) {
            $safe[0]->setSafe(true);
        }

        $cages = [
            [new Room(new Graph, '0c cage', 0x00, 0x00, 0x00, 0x0c), [0x0a, 0x0c, 0x0c, 0x0b, 0x0c, 0x18, 0x19, 0x0c, 0x0c, 0x1c, 0x1d, 0x0c, 0x0e, 0x0d, 0x0d, 0x0f]],
            [new Room(new Graph, '0d cage', 0x00, 0x00, 0x00, 0x0d), [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x3c, 0x3d, 0x31, 0x31, 0x40, 0x41, 0x31, 0x32, 0x30, 0x30, 0x33]],
            [new Room(new Graph, '0e cage', 0x00, 0x00, 0x00, 0x0e), [0x56, 0x57, 0x58, 0x59, 0x5a, 0x66, 0x67, 0x5d, 0x5e, 0x68, 0x69, 0x61, 0x62, 0x63, 0x64, 0x65]],
            [new Room(new Graph, '0f cage', 0x00, 0x00, 0x00, 0x0f), [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x8a, 0x8b, 0x71, 0x72, 0x8e, 0x8f, 0x75, 0x76, 0x77, 0x78, 0x79]],

        ];
        foreach ($cages as $cage) {
            $cage[0]->setCage(true);
        }

        $waters = [
            [new Room(new Graph, '0d w down', 0x00, 0x00, 0x00, 0x0d),   [0x2e, 0x31, 0x31, 0x2f, 0x31, 0x34, 0x35, 0x31, 0x31, 0x38, 0x39, 0x31, 0x32, 0x42, 0x43, 0x33]],
            [new Room(new Graph, '0f w down', 0x00, 0x00, 0x00, 0x0f),   [0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x86, 0x87, 0x79]],
        ];
        foreach ($waters as $water) {
            $water[0]->setWater(true);
        }

        return array_merge($tests, $safes, $cages, $waters);
    }
}
